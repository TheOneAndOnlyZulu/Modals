class t{constructor(){this.focusableEl='a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])',this.willAnim=!1,this.animTime=300,this.initiatorButton=null,this.allowedAttr=['aria-label','id','class','title'],this.btns=[{type:'button',text:'Cancel',attr:{'aria-label':'Close modal',id:'ssm-modal__na',class:'btn',title:'Close modal'}},{type:'button',text:'Accept',attr:{'aria-label':'Close modal',id:'ssm-modal__pa',class:'btn',title:'Accept & close modal'}}]}strip(t){try{var e=document.implementation.createDocument('http://www.w3.org/1999/xhtml','html',null);return e.documentElement.innerHTML=t,e.documentElement.textContent||e.documentElement.innerText}catch(t){return''}}async remove(){const t=document.getElementById('ssm-modal');t&&(!0===this.willAnim&&(t.setAttribute('aria-hidden',!0),await new Promise((t=>setTimeout(t,this.animTime)))),t.remove()),null!==this.initiatorButton&&this.initiatorButton.focus()}generate({title:t='',description:e='',removeText:n='Cancel',addText:i='',mainContent:s='',callback:a=null,params:o={},initiatorButton:l=null,willAnimate:d=this.willAnim,animationTimeout:m=this.animTime,buttons:c=this.btns}){l&&(this.initiatorButton=l,o.initiatorButton=l),m&&(this.animTime=m),d&&(this.willAnim=d);const r=s?`<div id="content" class="ssm-modal__content">${s}</div>`:'',u=e?`<div id="ssm-modal__description"><p>${this.strip(e)}</p></div>`:'';c=this.constructBtns(c);const h=`\n\t\t<div\n\t\t\tid="ssm-modal"\n\t\t\tclass="ssm-modal${d?' will-animate':''}"\n\t\t\trole="dialog"\n\t\t\taria-modal="true"\n\t\t\taria-labelledby="ssm-modal__title"\n    \t\taria-describedby="ssm-modal__description"\n\t\t\taria-hidden="false"\n\t\t>\n\t\t\t<div class="ssm-modal__container">\n\t\t\t\t<h3 id="ssm-modal__title">${this.strip(t)}</h3>\n\n\t\t\t\t${u}\n\n\t\t\t\t${r}\n\n\t\t\t\t<div class="ssm-modal-buttons is-flex">\n\t\t\t\t\t${c}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`;document.body.insertAdjacentHTML('beforeend',h),this.initiateFocusTrap('ssm-modal'),document.getElementById('ssm-modal__na').addEventListener('click',(()=>this.remove())),document.getElementById('ssm-modal').addEventListener('click',(t=>{'ssm-modal'===t.target.getAttribute('id')&&this.remove()})),document.body.addEventListener('keydown',(t=>{const e=t||window.event;('key'in e?'Escape'===e.key||'Esc'===e.key:27===e.keyCode)&&this.remove()})),a&&document.getElementById('ssm-modal__pa').addEventListener('click',(()=>{a(o)}))}constructBtns(t=[]){let e='';return t.forEach((t=>{const n='button'===t.type?'button':'a';let i='';Object.entries(t.attr).map((([t,e])=>{this.allowedAttr.includes(t)&&(i+=` ${t}="${this.strip(e)}"`)}));const s=`<${n} ${i}>${t.text}</${n}>`;e+=s})),e}initiateFocusTrap(t){const e=document.querySelector('#'+t),n=e.querySelectorAll(this.focusableEl),i=n[0],s=n[n.length-1];i.focus(),e.addEventListener('keydown',(t=>{'Tab'!==t.key&&9!==t.keyCode||(t.shiftKey?document.activeElement===i&&(s.focus(),t.preventDefault()):document.activeElement===s&&(i.focus(),t.preventDefault()))}))}}export{t as default};
